{
    "compilerOptions": {
        /* Visit https://aka.ms/tsconfig.json to read more about this file */

        /* Basic Options */
        "incremental": true,                          /* Enable incremental compilation */
        "target": "ES2019",                           /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', 'ES2021', or 'ESNEXT'. */
        "module": "es2020",                           /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', or 'ESNext'. */
        "allowJs": false,                             /* Allow javascript files to be compiled. */
        "checkJs": false,                             /* Report errors in .js files. */
        "declaration": true,                          /* Generates corresponding '.d.ts' file. */
        "declarationMap": true,                       /* Generates a sourcemap for each corresponding '.d.ts' file. */
        "sourceMap": true,                            /* Generates corresponding '.map' file. */
        // "outFile": "./",                           /* Concatenate and emit output to single file. */
        "outDir": "../lib",                           /* Redirect output structure to the directory. */
        "rootDir": ".",                               /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */
        // "removeComments": true,                    /* Do not emit comments to output. */
        // "downlevelIteration": true,                /* Provide full support for iterables in 'for-of', spread, and destructuring when targeting 'ES5' or 'ES3'. */
        // "isolatedModules": true,                   /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */
        // "resolveJsonModule": true,

        /* Strict Type-Checking Options */
        "strict": true,                               /* Enable all strict type-checking options. */

        /* Linter Checks */
        "noUnusedLocals": true,                       /* Report errors on unused locals. */
        "noUnusedParameters": true,                   /* Report errors on unused parameters. */
        "noImplicitReturns": true,                    /* Report error when not all code paths in function return a value. */
        "noFallthroughCasesInSwitch": true,           /* Report errors for fallthrough cases in switch statement. */
        "noUncheckedIndexedAccess": true,             /* Include 'undefined' in index signature results */
        "noImplicitOverride": true,                   /* Ensure overriding members in derived classes are marked with an 'override' modifier. */
        "noPropertyAccessFromIndexSignature": true,   /* Require undeclared properties from index signatures to use element accesses. */

        /* Module Resolution Options */
        "moduleResolution": "node",                   /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
        "esModuleInterop": true,                      /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */

        /* Source Map Options */
        // "sourceRoot": "",                          /* Specify the location where debugger should locate TypeScript files instead of source locations. */
        // "mapRoot": "",                             /* Specify the location where debugger should locate map files instead of generated locations. */
        // "inlineSourceMap": true,                   /* Emit a single file with source maps instead of having a separate file. */
        // "inlineSources": true,                     /* Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set. */

        /* Advanced Options */
        "allowUnreachableCode": false,
        "allowUnusedLabels": false,
        "assumeChangesOnlyAffectDirectDependencies": false,
        "importsNotUsedAsValues": "error",
        "skipLibCheck": true,                         /* Skip type checking of declaration files. */
        "forceConsistentCasingInFileNames": true      /* Disallow inconsistently-cased references to the same file. */
    }
}
